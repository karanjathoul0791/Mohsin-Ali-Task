{"version":3,"sources":["components/Selectcity.jsx","App.js","reportWebVitals.js","index.js"],"names":["data","name","result","Selectcity","useState","allChecked","setAllChecked","isChecked","setIsChecked","loading","setLoading","formData","handleSingleCheck","e","target","checked","useEffect","current","nextIsChecked","Object","keys","forEach","key","initialIsChecked","reduce","acc","d","className","style","width","margin","type","onChange","map","test","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAGMA,EAAO,CACX,CACEC,KAAM,WACNC,OAAQ,QAEV,CACED,KAAM,SACNC,OAAQ,QAEV,CACED,KAAM,UACNC,OAAQ,SAIG,SAASC,IACtB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAgCN,mBAASJ,GAAzC,mBAAOW,EAAP,KAMMC,GANN,KAM0B,SAACC,GACzBL,EAAa,2BAAKD,GAAN,kBAAkBM,EAAEC,OAAOb,KAAOY,EAAEC,OAAOC,aAwBzD,OArBAC,qBAAU,WACHP,GACHD,GAAa,SAACS,GACZ,IAAMC,EAAgB,GAItB,OAHAC,OAAOC,KAAKH,GAASI,SAAQ,SAACC,GAC5BJ,EAAcI,GAAOjB,KAEhBa,OAGV,CAACb,EAAYI,IAEhBO,qBAAU,WACR,IAAMO,EAAmBvB,EAAKwB,QAAO,SAACC,EAAKC,GAEzC,OADAD,EAAIC,EAAEzB,OAAQ,EACPwB,IACN,IACHjB,EAAae,GACbb,GAAW,KACV,CAACD,IAGF,qBAAKkB,UAAU,GAAGC,MAAO,CAAEC,MAAO,SAAlC,SACE,uBAAMF,UAAU,GAAhB,UACE,6CACA,sBAAKA,UAAU,GAAGC,MAAO,CAAEE,OAAQ,QAAnC,UACE,uBACE7B,KAAK,WACL0B,UAAU,mBACVI,KAAK,WACLhB,QAASV,EACT2B,SAvCa,SAACnB,GACtBP,EAAcO,EAAEC,OAAOC,YAwCjB,gDACA,6BAEAN,EAaE,KAZAE,EAASsB,KAAI,SAACC,EAAMC,GAAP,OACX,gCACE,uBACEJ,KAAK,WACLJ,UAAU,mBACV1B,KAAMiC,EAAKjC,KACXc,QAASR,EAAU2B,EAAKjC,MACxB+B,SAAUpB,IAEZ,gCAAQsB,EAAKjC,SARLkC,WC1DTC,MATf,WACE,OACE,gCACE,0DACA,cAACjC,EAAD,QCKSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.729b2114.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import \"./styles.css\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Banglore\",\r\n    result: \"pass\",\r\n  },\r\n  {\r\n    name: \"Mumbai\",\r\n    result: \"pass\",\r\n  },\r\n  {\r\n    name: \"Chennai\",\r\n    result: \"pass\",\r\n  }\r\n];\r\n\r\nexport default function Selectcity() {\r\n  const [allChecked, setAllChecked] = useState(false);\r\n  const [isChecked, setIsChecked] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [formData, setFormData] = useState(data);\r\n\r\n  const handleAllCheck = (e) => {\r\n    setAllChecked(e.target.checked);\r\n  };\r\n\r\n  const handleSingleCheck = (e) => {\r\n    setIsChecked({ ...isChecked, [e.target.name]: e.target.checked });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      setIsChecked((current) => {\r\n        const nextIsChecked = {};\r\n        Object.keys(current).forEach((key) => {\r\n          nextIsChecked[key] = allChecked;\r\n        });\r\n        return nextIsChecked;\r\n      });\r\n    }\r\n  }, [allChecked, loading]);\r\n\r\n  useEffect(() => {\r\n    const initialIsChecked = data.reduce((acc, d) => {\r\n      acc[d.name] = false;\r\n      return acc;\r\n    }, {});\r\n    setIsChecked(initialIsChecked);\r\n    setLoading(false);\r\n  }, [loading]);\r\n\r\n  return (\r\n    <div className=\"\" style={{ width: \"500px\" }}>\r\n      <form className=\"\">\r\n        <h3>Select City</h3>\r\n        <div className=\"\" style={{ margin: \"auto\" }}>\r\n          <input\r\n            name=\"checkall\"\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            checked={allChecked}\r\n            onChange={handleAllCheck}\r\n          />\r\n          <label> Select All</label>\r\n          <label />\r\n        </div>\r\n        {!loading\r\n          ? formData.map((test, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name={test.name}\r\n                  checked={isChecked[test.name]}\r\n                  onChange={handleSingleCheck}\r\n                />\r\n                <label>{test.name}</label>\r\n              </div>\r\n            ))\r\n          : null}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n{\r\n  /* <div className=\"\" style={{ width: \"500px\" }}>\r\n<form className=\"\">\r\n  <h3>Select City</h3>\r\n  <div className=\"\" style={{ margin: \"auto\" }}>\r\n    <input\r\n      type=\"checkbox\"\r\n      className=\"form-check-input\"\r\n      name=\"allSelect\"\r\n      checked={!city.some((cities) => cities?.isChecked !== true)}\r\n      onChange={handleChange}\r\n    />\r\n    <label className=\"\">All Select</label>\r\n  </div>\r\n  {city.map((cities, index) => (\r\n    <div className=\"\" key={index}>\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"form-check-input\"\r\n        name={cities.name}\r\n        checked={cities?.isChecked || false}\r\n        onChange={handleChange}\r\n      />\r\n      <label className=\"\">{cities.name}</label>\r\n    </div>\r\n  ))}\r\n</form>\r\n</div> */\r\n}\r\n","import React from 'react'\n// import RadioButton from './components/RadioButton'\nimport Selectcity from './components/Selectcity'\nfunction App() {\n  return (\n    <div>\n      <h1>React Coding Assignments</h1>\n      <Selectcity/>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}